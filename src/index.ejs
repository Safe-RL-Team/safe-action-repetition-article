<!doctype html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style id="distill-article-specific-styles">
    <%=require("../static/styles.css") %>
  </style>
  <script src="https://distill.pub/template.v2.js"></script>
</head>

<body>

  <d-front-matter>
    <script type="text/json">
      <%= JSON.stringify(require("./frontmatter.json"), null, 4) %>
    </script>
  </d-front-matter>

  <d-title>
    <h1>Constraint policy optimization </h1>
    <p>An example project usingWebpack, Babel, and Svelte. </p>
  </d-title>

  <d-article>
    <h3>Introduction</h3>
    <p>
      Welcome to our paper about the constraint policy opmization (CPO).
      In this article, we will discuss the CPO method for safe reinforcement learning, 
      which was presented in the paper "Contraint Policy Optimization" by 
      Joshua Achiam, David Held, Aviv Tamar, and Pieter Abbel in 2017 (We abbreviate it to be [CPO17]). 
      In their paper, the underlying theoretical solution to the constraint problem 
      was presented, and what we are going to show you in this article is our implementation of the algorithm
      using PyTorch. During the implementation of the CPO method, we came up to the idea of implementing the CG-method to
      increase the efficiency of the algorithm. To be sure of that, we made some experiments with different CG iterations
      (which we will clarify) and acquired some interesting results. Additionally, in the early stage of the implementation,
      we ran into a problem, in which the reward function oscillated up and down during the entire training of the agents. 
      By carefully analyzing the problem, we found out about the reason and will present you with the solution.

    </p>

    <br>
    

    <h3>Table of contents</h3>
    <p>

      <ol>
        <li>Introducing the algorithm</li>
          <ol>
            <li>Abstract theory</li>
            <li>Solution</li>
          </ol>
        <li>Showcase</li>
        <ol>
          <li>CartPole</li>
          <li>LunarLander</li>
        </ol>
        <li>Experiments:</li>
        <ol>
          <li>CG-method</li>
          <li>Trust region step</li>
        </ol>
      </ol> 

    <h3>Introducing the algorithm</h3>
    <p>
      Since the full abstract theory behind CPO was fully cover in [CPO17], we recall only the main theoretical results 
      that we would implement into our code to computationally solve the problem. 
    </p>
    <h4>Abstract theory</h4>
    <p>
      First, we start by introducing our main optimization problem of the reward function: 
      Let $\Pi_\theta \subset \Pi$ be the set of parametrized policies under parameter $\theta$, 
      on which we want to conduct our policy search algorithm to avoid the curse of dimensionality.
      We optimize over $\Pi_\theta \bigcap \Pi_C$. For $\delta > 0$ step size, $D$ as a distance measure we have
    </p>
    <d-math block="">
      \pi_{k+1} = \arg \max_{\pi \in \Pi_\theta} J(\pi),
    </d-math>
    <d-math block="">
      J_{C_i}(\pi) \leq d_i, \quad i = 1,.. m
    </d-math>
    <d-math block="">
      D(\pi,\pi_k) \leq \delta
    </d-math>
  <p>
    By applying the trust region methods with suitable coefficients instead of penalties on policy divergence, 
    we can guarantee a monotonic improvement while being able to take large steps.
  </p>

  <d-math block="">
  \pi_{k+1} = \arg \max_{\pi \in \Pi_\theta}\mathbb{E}_{s \sim d^{\pi^k}} \left[A^{\pi}_R(s, a)\right]
  </d-math>
  with constraints:
  <d-math block="">
  J_{C_i}(\pi_k) +  \frac{1}{1-\tau}\mathbb{E}_{s \sim d^{\pi^k}} \left[A^{\pi}_R(s, a) \right] \leq d_i
  </d-math>
  <d-math block="">
  \mathbb{E}_{s \sim d^{\pi^k}}[D_{KL}(\pi||\pi_k)[s]] \leq \delta,
  </d-math>
  This optimization problem of the reward function paired with a trust region is the main goal to solve. 
  <br>

  Also, the "suitable coefficients" part is actually interesting since it is the root of the problem that we mentioned earlier in 
  the introductory part of this article. We will explain this in the following section. 

  <h4>Dual problem</h4>
  <p>In order to solve the above mentioned optimization problem, 
    we have to present it in different format so that it could be solved using computational method.
    Now we turn to parametrized policies $\pi_\theta$ and linearized it using the surrogate function. </p>

    <p>
    We denote: $g := \nabla J(\theta_k)^\top $ as gradient of the objective, 
    $b_i := J_{C_i}(\theta_k)$ as gradient of the constraint,
    $c_i :=  J_{C_i}(\theta_k)^\top (\theta - \theta_k)$
    </p>

    <d-math block =""> \theta_{k+1} = \arg\max_\theta g(\theta - \theta_k) \text{s.t. }</d-math>
    <d-math block =""> J_{C_i}(\theta_k) +  \le d_i \text{ for } i=1,...,m</d-math>
    <d-math block =""> \frac{1}{2} (\theta - \theta_k)^\top H (\theta - \theta_k) \le \delta </d-math>
    <p> Where $H$ denotes the Hessian of the KL-divergence, we assume it to be positive definite.</p>
    <br>
    <p> To solve this optimization with consideration of constraints problem, we first present the 
      dual to the problem which is
    </p>

    <d-math block =""> 
      \max_{\lambda \geq 0, \nu \geq 0} \frac{-1}{2\lambda} (g^\top H^{-1}g - 2r^T \nu + \nu^{\top}S\nu) + \nu^\top c \frac{\lambda \delta}{2}
    </d-math>
    <p>
      Whereas
      <br>
      $B := [b_1, b_2,...]^\top, \quad$ $c :=  [c_1, c_2,...]^\top, \quad $ 
      $r := g^\top H^{-1} B, \quad $ $S := B^\top H^{-1} B$
      </p>

      <h4>Solution to the dual problem</h4>
      Solve for $\lambda^*$ and $\nu^*$ using Lagrangian method for one constraint,
       we achieve the solution of the dual problem when it is FEASIBLE:

    <d-math block =""> \theta^* = \theta_k + \frac{1}{\lambda^*}H^{-1}(g - B\nu^*) </d-math>
      Whereas $\nu^* = (\frac{\lambda^*c-r}{S})_+$ and <br>
      $\lambda^* =$

      <br>
      When it is however, infeasible, we use the following update rule:

    <d-math block =""> \theta^* = \theta_k - \sqrt{\frac{2\delta}{b^\top H^{-1}b}}H^{-1}b</d-math>
<br>
<p> 
      Before we showcase the results, it is clear that the algorithm might require great computational power, 
      since we deal a lot with the inverse matrix problem ($H^{-1}b$). 
      In order to improve the efficiency of the algorithm, we will apply the CG-method to solve the inverse matrix problem.
      <br>
      Furthermore, the trust region coefficients do play an important role in our algorithm, since it would affect how 
      great our backtrack step is going to be in case of infeasibility.
    </p>
      <br>
      <br>
      <br>
      ###########
      <br>


      <h3>Showcase</h3>

      <br>
 
      ###########
      <br>




    <p>Let's use some CSS to style an inlined SVG. Here's an arrow
      <svg width="27px" height="9px" viewBox="0 0 27 9" version="1.1" xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink">
        <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
          <g id="Group" transform="translate(-0.195652, 0.0)">
            <path d="M10.5,4.5 L26.8913043,4.5" id="arrow-line" stroke="#FF6600" stroke-width="2"
              stroke-linecap="square" stroke-dasharray="6,4"></path>
            <g id="arrow-head" transform="translate(5.0, 4.5) scale(-1, 1) translate(-5.0, -4.5) translate(0.5, 0.0)"
              fill="#FF6600" fill-rule="nonzero">
              <path
                d="M4.5,0 C5.67007294,3.25202425 6.85281213,6.29180565 9,9 L4.5,7.3125 L0,9 C2.13530145,6.28972675 3.34126793,3.24998975 4.5,0 Z"
                id="Shape" transform="translate(4.5, 4.5) rotate(-270.0) translate(-4.5, -4.5) "></path>
            </g>
          </g>
        </g>
      </svg> that we
      can make
      inline. If you'd like to change the color in CSS, we can do so. Let's put the second arrow (<span
        id="arrow-2"><svg width="27px" height="9px" viewBox="0 0 27 9" version="1.1" xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink">
          <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
            <g id="Group" transform="translate(-0.195652, 0.0)">
              <path d="M10.5,4.5 L26.8913043,4.5" id="arrow-line" stroke="#FF6600" stroke-width="2"
                stroke-linecap="square" stroke-dasharray="6,4"></path>
              <g id="arrow-head" transform="translate(5.0, 4.5) scale(-1, 1) translate(-5.0, -4.5) translate(0.5, 0.0)"
                fill="#FF6600" fill-rule="nonzero">
                <path
                  d="M4.5,0 C5.67007294,3.25202425 6.85281213,6.29180565 9,9 L4.5,7.3125 L0,9 C2.13530145,6.28972675 3.34126793,3.24998975 4.5,0 Z"
                  id="Shape" transform="translate(4.5, 4.5) rotate(-270.0) translate(-4.5, -4.5) "></path>
              </g>
            </g>
          </g>
        </svg></span>) in a tag with an ID, so we can
      target it in CSS.

      <d-code block="" language="css">
        #arrow-2 #arrow-head {
        fill: steelblue;
        }

        #arrow-2 #arrow-line {
        stroke: steelblue;
        }
      </d-code>

    </p>

    <h4>Formulas</h4>

    <p>Here's a test of an inline equation <d-math>c = a^2 + b^2</d-math>. Can also be used with configurable katex
      settings, for example by
      using inline <code>$</code> signs: <d-math>x^2</d-math>. There are also block equations:</p>
    <d-math block="">
      c = \pm \sqrt{ \sum_{i=0}^{n}{a^{222} + b^2}}
    </d-math>
    <p>Math can also be quite involved:</p>
    <d-math block="">
      \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} = 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}}
      {1+\frac{e^{-6\pi}} {1+\frac{e^{-8\pi}} {1+\cdots} } } }
    </d-math>

    <p>We've also been experimenting with <a
        href="https://github.com/distillpub/template/wiki/Annotated-Formulas">annotated formulas</a>:</p>

    <style>
      .eq-grid {
        display: grid;
        justify-content: start;
        grid-row-gap: 10px;
      }

      .eq-grid figcaption d-math {
        font-size: 100%;
      }

      .eq-grid .expansion-marker {
        border: 1px solid #CCC;
        border-bottom: none;
        height: .5em;
        width: 100%;
      }
    </style>

    <figure class="eq-grid">

      <div style="grid-row: 1; grid-column: 1;">
        <d-math> C ~~~=~~~~ </d-math>
      </div>
      <div style="grid-row: 1; grid-column: 2;">
        <d-math> H^E_D(X, Z) </d-math>
      </div>
      <div style="grid-row: 1; grid-column: 3;">
        <d-math> ~~~-~~~ </d-math>
      </div>
      <div style="grid-row: 1; grid-column: 4;">
        <d-math> H^E_E(X, Z) </d-math>
      </div>


      <div class="expansion-marker" style="grid-row: 2; grid-column: 4 / 7; "></div>

      <div style="grid-row: 3; grid-column: 1;">
        <d-math> ~~~~~~~=~~~~ </d-math>
      </div>
      <div style="grid-row: 3; grid-column: 2;">
        <d-math> H^E_D(X, Z) </d-math>
      </div>
      <div style="grid-row: 3; grid-column: 3;">
        <d-math> ~~~-~~~ </d-math>
      </div>
      <div style="grid-row: 3; grid-column: 4;">
        <d-math> H^E_E(Z | X) </d-math>
      </div>
      <div style="grid-row: 3; grid-column: 5;">
        <d-math> ~~~-~~~ </d-math>
      </div>
      <div style="grid-row: 3; grid-column: 6;">
        <d-math> H^E_E(X) </d-math>
      </div>

      <figcaption style="grid-row: 4; grid-column: 4; max-width:135px;">
        Bits to represent <d-math>z</d-math><br> if you already know <d-math>x</d-math>.
      </figcaption>
      <figcaption style="grid-row: 4; grid-column: 6; max-width:120px;">
        Bits to represent<br>
        <d-math>x</d-math> by itself.
      </figcaption>

    </figure>

    <h4>Citations</h4>

    <p>We can<d-cite key="mercier2011humans"></d-cite> also cite <d-cite
        key="gregor2015draw,mercier2011humans,openai2018charter"></d-cite> external publications. <d-cite
        key="dong2014image,dumoulin2016guide,mordvintsev2015inceptionism"></d-cite>. We should also be testing
      footnotes
      <d-footnote id="d-footnote-1">This will become a hoverable footnote. This will become a hoverable footnote. This
        will become a
        hoverable footnote. This will become a hoverable footnote. This will become a hoverable footnote. This will
        become a hoverable footnote. This will become a hoverable footnote. This will become a hoverable footnote.
      </d-footnote>. There are multiple footnotes, and they appear in the appendix<d-footnote id="d-footnote-2">Given I
        have coded them
        right. Also, here's math in a footnote: <d-math>c = \sum_0^i{x}</d-math>. Also, a citation. Box-ception<d-cite
          key="gregor2015draw"></d-cite>!</d-footnote> as well.</p>


    <h4>Displaying code</h4>
    <p>Some inline javascript:<d-code language="javascript">var x = 25;</d-code>. And here's a javascript code block.
    </p>

    <d-code block="" language="javascript">
      var x = 25;
      function(x){
      return x * x;
      }
    </d-code>
    <p>We also support some highlighting.</p>
    <d-code block="" language="python">
      # Python 3: Fibonacci series up to n
      def fib(n):
      a, b = 0, 1
      while a &lt; n: print(a, end=' ' ) a, b=b, a+b </d-code>

    <h4>Tables</h4>
    <p>We have simple tables that try to stay readable at most screen sizes:
    </p>

    <style>
      #example-table {
        overflow-x: scroll;
      }

      #example-table th {
        white-space: nowrap;
      }

      #example-table tbody th {
        font-weight: initial;
        border-bottom: 1px solid rgb(242, 242, 242);
      }

      #example-table tbody tr:last-of-type th {
        border-bottom: inherit;
      }

      #example-table td,
      #example-table thead th {
        text-align: center;
      }

      #example-table td {
        border-color: rgb(242, 242, 242);
      }

      #example-table td.no {
        background-color: #f6f6f6;
      }
    </style>
    <table id="example-table">
      <thead>
        <tr>
          <th></th>
          <th scope="col">Parallel</th>
          <th scope="col">Efficient</th>
          <th scope="col">Reversible</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th scope="row">GANs</th>
          <td>Yes</td>
          <td>Yes</td>
          <td class="no">No</td>
        </tr>
        <tr>
          <th scope="row">Flow Models</th>
          <td>Yes</td>
          <td class="no">No</td>
          <td>Yes</td>
        </tr>
        <tr>
          <th scope="row">Autoregressive Models</th>
          <td class="no">No</td>
          <td>Yes</td>
          <td>Yes</td>
        </tr>
      </tbody>
    </table>

    <h4>Interactive Figures</h4>

    <p>
      Here's a dynamically instantiated "figure". We use Intersection Observers to allow loading resource-heavy
      figures only when readers scroll close to them. The code for this is in <code>src/index.js</code>.
    </p>

    <d-figure id="svelte-example-dfigure">
      <figure>
        <div id="svelte-example-target"></div>
        <figcaption>And a static figcaption. You can use citations<d-cite key="mercier2011humans"></d-cite> in this
          figcaption, but not in text added by javascript.</figcaption>
      </figure>
    </d-figure>

    <p>You can't use citation tags (<code>d-cite</code>) in figures that are dynamically loaded using Javascript.
      Distill statically
      analyzes your submission for its citations, because they need to be uploaded to indexers and organizations like <a
        href="https://www.crossref.org/">CrossRef</a> and <a href="https://scholar.google.com">Google Scholar</a>.</p>

    <p>That's it for the example article! Feel free to look at <a
        href="https://github.com/distillpub?utf8=%E2%9C%93&q=post--&type=public">implementations
        of existing Distill articles</a>, or ask for help in
      the <a href="http://slack.distill.pub">Distill Slack Community</a>.</p>

  </d-article>



  <d-appendix>
    <h3>Acknowledgments</h3>
    <p>
      We are deeply grateful to...
    </p>

    <p>
      Many of our diagrams are based on...
    </p>

    <h3>Author Contributions</h3>
    <p>
      <b>Research:</b> Alex developed ...
    </p>

    <p>
      <b>Writing & Diagrams:</b> The text was initially drafted by...
    </p>


    <d-footnote-list></d-footnote-list>
    <d-citation-list></d-citation-list>
  </d-appendix>

  <!-- bibliography will be inlined during Distill pipeline's pre-rendering -->
  <d-bibliography src="bibliography.bib"></d-bibliography>

</body>